<?php

if (is_int($a) || is_float($a)) {
	echo $a;
}
var_dump($a);
-----
Block#1
    Expr_FuncCall
        name: LITERAL('is_int')
        args: Var#2<$a>
        result: Var#4
    Stmt_JumpIf
        cond: Var#4
        if: Block#2
        else: Block#3

Block#2
    Parent: Block#1
    Parent: Block#3
    Phi
        vars: LITERAL(true)
        vars: Var#6
        result: Var#7
    Stmt_JumpIf
        cond: Var#7
        if: Block#4
        else: Block#5

Block#3
    Parent: Block#1
    Expr_FuncCall
        name: LITERAL('is_float')
        args: Var#2<$a>
        result: Var#9
    Expr_Cast_Bool
        expr: Var#9
        result: Var#6
    Stmt_Jump
        target: Block#2

Block#4
    Parent: Block#2
    Expr_Assertion<(type(LITERAL('int'))|type(LITERAL('float')))>
        expr: Var#2<$a>
        result: Var#12<$a>
    Terminal_Echo
        expr: Var#12<$a>
    Stmt_Jump
        target: Block#6

Block#5
    Parent: Block#2
    Expr_Assertion<not((type(LITERAL('int'))|type(LITERAL('float'))))>
        expr: Var#2<$a>
        result: Var#13<$a>
    Stmt_Jump
        target: Block#6

Block#6
    Parent: Block#4
    Parent: Block#5
    Phi<Var#14<$a>>: = [Var#12<$a>,Var#13<$a>,]
    Expr_FuncCall
        name: LITERAL('var_dump')
        args: Var#14<$a>
        result: Var#17